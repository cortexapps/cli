# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  workflow_dispatch:

  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build requests pyyaml
    - name: Run pip-audit to check for vulnerabilities
      uses: pypa/gh-action-pip-audit@v1.0.8
    - name: Create and populate .cortex/config file
      env:
        CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
      run: |
        mkdir $HOME/.cortex
        echo "[default]" > $HOME/.cortex/config
        echo "api_key = $CORTEX_API_KEY" >> $HOME/.cortex/config
        pwd
        ls -l $HOME/.cortex
        cat $HOME/.cortex/config
      shell: bash
    - name: Test with pytest
      env:
        CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
      run: |
        pip install pytest pytest-cov
        pytest --cov=cortexapps_cli --cov-report term-missing --cov-report=json --cov-report=html
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: code coverage
        path: htmlcov/
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
