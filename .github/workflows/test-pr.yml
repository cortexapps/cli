name: Test pull request

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main
    paths:
      - 'cortexapps_cli/**'
      - 'tests/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: need to refactor tests to allow multiple versions tested at once.
        # Tests that delete-all integration configurations break tests that just
        # created them.
        #python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry poetry-audit-plugin pytest-cov pytest-xdist pytest

    - name: Run pip-audit to check for vulnerabilities
      run: poetry audit

    - name: Create and populate .cortex/config file
      env:
        CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
        CORTEX_API_KEY_RICH_SANDBOX: ${{ secrets.CORTEX_API_KEY_RICH_SANDBOX }}
      run: |
        mkdir $HOME/.cortex
        echo "[default]" > $HOME/.cortex/config
        echo "api_key = $CORTEX_API_KEY" >> $HOME/.cortex/config
        echo "[rich-sandbox]" >> $HOME/.cortex/config
        echo "api_key = $CORTEX_API_KEY_RICH_SANDBOX" >> $HOME/.cortex/config
        pwd
        ls -l $HOME/.cortex
        cat $HOME/.cortex/config
      shell: bash

    - name: Install package
      run: |
        poetry build
        poetry install

    - name: Test with pytest
      env:
        CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        poetry run pytest -n auto
