name: Test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - staging
    paths:
      - 'cortexapps_cli/**'
      - 'tests/**'

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  CORTEX_API_KEY: ${{ secrets.CORTEX_API_KEY }}
  CORTEX_API_KEY_VIEWER: ${{ secrets.CORTEX_API_KEY_VIEWER }}
  CORTEX_BASE_URL: ${{ vars.CORTEX_BASE_URL }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: need to refactor tests to allow multiple versions tested at once.
        # Tests that delete-all integration configurations break tests that just
        # created them.
        #python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.11"]
    steps:
    - uses: actions/checkout@v4
      with:
        ref: staging
        fetch-depth: 0

    - name: Extract bump type from PR title
      id: bump
      run: |
        BUMP_TYPE=$(jq -r .pull_request.title "$GITHUB_EVENT_PATH" | grep -Eo "#(patch|minor|major)" | head -n1 || echo "#patch")
        echo "bump_type=${BUMP_TYPE/#/}" >> $GITHUB_OUTPUT

    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.64.0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        DEFAULT_BUMP: ${{ steps.bump.outputs.bump_type }}
        RELEASE_BRANCHES: staging
        PATCH_STRING_TOKEN: "#patch"
        MINOR_STRING_TOKEN: "#minor"
        MAJOR_STRING_TOKEN: "#major"
        WITH_V: false

    - name: Set up Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Install git-chglog
      run: |
        curl -LO https://github.com/git-chglog/git-chglog/releases/download/v0.15.4/git-chglog_0.15.4_linux_386.tar.gz
        tar -xzf git-chglog_0.15.4_linux_386.tar.gz
        chmod +x git-chglog
        sudo mv git-chglog /usr/local/bin/
        git-chglog --version

    - name: Generate HISTORY.md
      run: git-chglog -o HISTORY.md

    - name: Commit and Push
      run: |
        if git diff --exit-code HISTORY.md; then
          echo "No changelog update needed"
        else
          git add HISTORY.md
          git commit -m "chore: update HISTORY.md for ${{ github.ref_name }}"
          git push
        fi

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Install dependencies
      run: |
        sudo apt update && sudo apt install just
        python -m pip install --upgrade pip
        pip install poetry poetry-audit-plugin pytest-cov pytest pytest-xdist

    - name: Run pip-audit to check for vulnerabilities
      run: poetry audit

    - name: Create and populate .cortex/config file
      run: |
        mkdir $HOME/.cortex
        echo "[default]" > $HOME/.cortex/config
        echo "api_key = $CORTEX_API_KEY" >> $HOME/.cortex/config
        echo "base_url = $CORTEX_BASE_URL" >> $HOME/.cortex/config
      shell: bash

    - name: Install package
      run: |
        poetry build
        poetry install

    - name: Test with pytest
      run: |
        just test-all
